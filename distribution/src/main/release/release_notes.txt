Apache CXF 2.4.5 Release Notes

1. Overview

The 2.4.x versions of Apache CXF are significant new versions of CXF 
that provides several new features and enhancements.  

New features include: 
* Log Browser Console - see the logbrowser sample for an example
* Transformation feature provides for a fast and effective way to transform inbound 
  and/or outbound XML messages, please see the TransformationFeature page for more 
  information.
* JIBX databinding
* Faster startup and reduced spring configuration. The Spring support has been redone
  to be based on the ExtensionManagerBus. This results in much faster startup. It also
  means that all of the imports of META-INF/cxf/cxf-extension-*.xml are no longer 
  needed and are deprecated.  Additionaly, all features are now available when 
  using the ExtensionManager Bus instead of being forced to use Spring.
* WSS4J has been updated from 1.5.x to 1.6. See http://ws.apache.org/wss4j/wss4j16.html
  for the list of new features and upgrade notes for Apache WSS4J 1.6.  Some notable new 
  features for CXF users include:
    * SAML2 support: WSS4J 1.6 includes full support for creating, manipulating and 
    parsing SAML2 assertions, via the Opensaml2 library. See
    http://coheigea.blogspot.com/2011/02/support-for-saml2-assertions-in-wss4j.html 
    for more information.
    * Performance work: A general code-rewrite has been done with a focus on improving 
    performance.
    * Support for Crypto trust-stores: WSS4J 1.6 separates the concept of keystore and 
    truststores. See http://coheigea.blogspot.com/2011/01/wss4j-16-crypto-property-change.html
    for more information.
 * WS-SecurityPolicy support for SAML tokens.
 * Initial OSGi Blueprint support for JAX-WS and JAX-RS
 * A simple framework for building an STS was added to CXF's WS-Security module.   See the
   sts_issue_operation sample to see this being used to generate SAML tokens based on X509 
   certs used for the authentication.


Users are encourage to review the migration guide at:
http://cxf.apache.org/docs/24-migration-guide.html
for further information and requirements for upgrading to 2.4.0.   In particular, the upgrades 
to WSS4J and Neethi will require some migration work if you use the WSS4J API's directly or
have created your own Policy objects or builders.   Additionally, XmlSchema was update to 2.0 
so any custom Aegis types may need to be updated.


2.4.5 fixes over 43 JIRA issues reported by users and the community.


2. Installation Prerequisites 

Before installing Apache CXF, make sure the following products,
with the specified versions, are installed on your system:

    * Java 5 Development Kit
    * Apache Maven 2.2.1 or 3.x
    * Some samples can be built with Apache Ant 1.6 or later


3.  Integrating CXF Into You Application

If you use Maven to build your application, you need merely add
appropriate dependencies. See the pom.xml files in the samples.

If you don't use Maven, you'll need to add one or more jars to your
classpath. The file lib/WHICH_JARS should help you decide which 
jars you need.

4. Building the Samples

Building the samples included in the binary distribution is easy. Change to
the samples directory and follow the build instructions in the README.txt file 
included with each sample.

5. Reporting Problems

If you have any problems or want to send feedback of any kind, please e-mail the
CXF dev list, dev@cxf.apache.org.  You can also file issues in JIRA at:

http://issues.apache.org/jira/browse/CXF


6. Migration notes:

See the migration guide at:
http://cxf.apache.org/docs/24-migration-guide.html
for caveats when upgrading from CXF 2.3.x to 2.4.x.

7. Specific issues, features, and improvements fixed in this version



** Bug
    * [CXF-3836] - Missing output parameters in wrapped method implementations generate NPE
    * [CXF-3867] - Fix for CXF-1816 causes startup performance regression
    * [CXF-3891] - WSDL2JS Null Pointer Exception
    * [CXF-3897] - Better handling on invalid JAXRS '_type' parameter
    * [CXF-3900] - InjectionUtils do not handle correctly collections inside query bean
    * [CXF-3903] - WADL contains wrong parameter names for multipart/form-data
    * [CXF-3905] - The archetype is missing
    * [CXF-3908] - ExceptionMappers for IOExceptions thrown by JAX-RS MessageBodyReaders are ignored 
    * [CXF-3911] - Exception mapping not applied to exceptions thrown from providers mapping data to brans
    * [CXF-3916] - partial response problem with SOAP 1.1 use of WS-Addressing
    * [CXF-3925] - WebFaultOutInterceptor expects the Fault.
    * [CXF-3934] - JaxWsClientProxy clears stacktrace of custom exception
    * [CXF-3937] - UriInfo does not report base address correctly in some cases
    * [CXF-3938] - JAX-RS Contexts are not available to MessageBodyReader and MessageBodyWriter providers at the selection stage
    * [CXF-3939] - UriInfo returns the list of matched uris and resources in the wrong order
    * [CXF-3941] - WADLgenerator ignores Description annotation targeting the input parameter if it is set inside a method-level Descriptions annotation
    * [CXF-3942] - CounterRepository cannot be assigned to a named bus
    * [CXF-3946] - <property name="namespacePrefixes" ref="namespaceMap" /> causes exception due to immutable Map being used in JAXBElementProvider
    * [CXF-3947] - AbstractBeanDefinitionParser loses Bus names
    * [CXF-3953] - wadl2java doesn't find types with underscore in their name
    * [CXF-3956] - JAX-WS HandlerResolver consulted for ServiceImpl.createPort, but not for createDispatch
    * [CXF-3958] - Unmarshalling error when using collections of subtypes with the StaxTransformFeature and 'out' transformations
    * [CXF-3959] - CXF JAX-WS: @PostConstruct methods invoked twice in Spring-based projects
    * [CXF-3961] - SoapTransportFactory: confused exception by unknown transport protocol
    * [CXF-3966] - When client sends invalid XML, JAX-RS returns 500 instead of 4xx
    * [CXF-3969] - WrapperStyleNameCollisionValidator doesn't take the -bareMethods flag into consideration



** Improvement
    * [CXF-3380] - JAX-RS: Support writing to DataSources
    * [CXF-3831] - Provide deploy-to-Tomcat options for Java-first and WSDL-first examples
    * [CXF-3893] - CXF uses wsdl4j implementation classes
    * [CXF-3894] - Improve the logging support for RequestDispatcherProvider and FormUtils in case of form values stored as http request parameters
    * [CXF-3902] - Simplify WADL queries
    * [CXF-3921] - Making RMTxStore's table exists error state/code configurable
    * [CXF-3926] - Supporting JAXWS Provider's null response handling (the provider's invoke may return a null to indicate no response should be sent back)
    * [CXF-3933] - Introduce an exception class for reporting problems encountered during reading the multiparts 
    * [CXF-3936] - Update Multipart annotation to indicate that null should optionally represent a missing multipart part 
    * [CXF-3952] - Add SchemaLocation annotation to simplify adding an xsi schemaLocation attribute
    * [CXF-3960] - Patch for InitiatorSignatureToken Support in WS-Policy definition
    * [CXF-3965] - Enhancement of the exception message when configuring the schema location in the jaxws endpoint.
    * [CXF-3970] - Patch: InitiatorEncryptionToken, RecipientSignatureToken, RecipientEncryptionToken support in WS Sec Policy
    * [CXF-3974] - Clean up the servlet dependency of CXF systest
    * [CXF-3975] - Consolidate ws-rm configuration schema for spring and blueprint

** New Feature
    * [CXF-3913] - Blueprint WS-RM
    * [CXF-3950] - Add XMLInstruction annotation to simplify adding DOCType and custom processing instructions

